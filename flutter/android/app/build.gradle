import com.google.protobuf.gradle.*
plugins {
    id "com.google.protobuf" version "0.9.4"
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

dependencies {
    implementation 'com.google.protobuf:protobuf-javalite:3.20.1'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.20.1'
    }

    generateProtoTasks {
        all().configureEach { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

android {
    compileSdkVersion 34
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        main.proto.srcDirs += '../../../libs/hbb_common/protos'
        main.proto.includes += "message.proto"
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // ИЗМЕНИЛ applicationId чтобы совпадало с AndroidManifest.xml
        applicationId "com.rustdesk.stealth"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
      release {
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
        storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
        storePassword keystoreProperties['storePassword']
      }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules'
            // Добавь это для уменьшения размера
            minifyEnabled true
            shrinkResources true
        }
        debug {
            // Для отладки
            minifyEnabled false
            shrinkResources false
        }
    }

    // Добавь это для избежания конфликтов
    packagingOptions {
        pickFirst '**/libflutter.so'
        pickFirst '**/libapp.so'
        pickFirst '**/libc++_shared.so'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "androidx.media:media:1.6.0"
    implementation 'com.github.getActivity:XXPermissions:18.5'
    implementation("org.jetbrains.kotlin:kotlin-stdlib") { version { strictly("1.9.10") } }
    implementation 'com.caverock:androidsvg-aar:1.4'

    // Добавь зависимости для работы в фоне
    implementation 'androidx.work:work-runtime:2.8.1'
    implementation 'androidx.core:core:1.12.0'
}